Ergo workman

workman layout in apps 

* Workman

  Раскладка workman замечательна сама по себе, но практически полное отсутсвие 
  её поддержки, делает жизнь с ней мучительной. 
 
  Если ты, вдруг решили её попопробовать, послушай меня - ОСТАНОВИСЬ ГЛУПЕЦ!
  Спокойно работай на своем qwerty / dvorak / colemak.
  
  ДАЖЕ НЕ ДУМАЙ! Я СЕРЬЁЗНО!
  
  Не обрекай себя на этот кошмар! Чтобы комфортно работать с workman тебе 
  придется потратить уйму времени и стать гуру в конфигурировании клавиатур
  В каждой операционной системе которую ты используешь.
  
  Оно тебе надо?
  
  После многих лет её использования я не порекомендую workman никому!
  
  - Отсутсвие системной поддержки win / osx / linux, мне пришлось разбираться и
    писать её самому
  - Альтернативный язык / раскладка - тебе придется спроектировать свою новую
    раскладку под родной язык
  - Перманентный ребиндинг во всех приложениях
  - Ты выглядишь полным глупо, когда пытаешься что-то набрать на обычной
    клавиатуре

  Мои раскладки:
 
  - windows
  - OSX
  - Linux
    - Arch
    - Debian

* Ergo workman
  
  Я довольно давно виду гит-репозиторий с различными настройками биндингов под
  workman Данные биндинги скорее отражают мои привычки и плохо
  системотизированы.

  Столкнувшись недавно с проектом Xah Lee, ergo-mode, представляющй из себя
  переосмысление стандартных биндигов emacs, я был очень впечатлен проделанной
  работой, на которую у меня никогда не хватало духа, и я нашел его видение
  довольно близким мне по духу - кроме схожих комбинаций для перемещения, Xah
  Lee проработал биндинги редактирования, опираясь на статистику используемых в
  emacs комманд. Представьте моё удивление когда среди поддерживаемых раскладок
  я обнаружил workman!
  
  В рамках данного проекта предпологается взять разработанный Xah Lee лайаут
  операций над текстом и по мере возможности распространить его на различные
  системы помимо emacs, чем я безсистемно занимался последние годы.

** vim / neovim
** emacs / spacemacs
** nano
** zsh / bash / fish / ..
** midnight commander
** intelij / clion / eclipse

* Ergo emacs

* Workman for coders
  
  По аналогии colemak for coders предпологаетсяя добавление в workman AltGr слоя
  со спец-символами перенесеннымй ближе к home-row

- цифры хорошее место для редких юникод-символов, стрелки, параграфы и т.д.

- Далеко располооженные символы

  | скобки      | операторы       |
  |-------------+-----------------|
  | ( ) { } [ ] | + - * =         |
  |             | ~ ! @ # $ % ^ & |


  workman for coders

  ┌────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬────────┐
  │ `  │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ ─   │ =   │ BS     │
  │ ~  │ !   │ @   │ #   │ $   │ %   │ ^   │ &   │ *   │ (   │ )   │ _   │ +   │        │
  ├────┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬─────┤
  │Tab    │ q 1 │ d 2 │ r 3 │ w 4 │ b 5 │ j ╳╳│ f ╳╳│ u 6 │ p 7 │ ; 8 │ [ 9 │ ] 0 │ \   │
  │       │ Q   │ D   │ R   │ W   │ B   │ J ╳╳│ F ╳╳│ U   │ P   │ :   │ {   │ }   │ |   │
  ├───────┴─┲━━━┷━┳━━━┷━┳━━━┷━┳━━━┷━┱───┴─┬───┴─┲━━━┷━┳━━━┷━┳━━━┷━┳━━━┷━┱───┴─┬───┴─────┤
  │Backspace┃ a { ┃ s } ┃ h ( ┃ t ) ┃ g ! │ y $ ┃ n ─ ┃ e + ┃ o * ┃ i \ ┃ ' ` │Enter    │
  │         ┃ A   ┃ S   ┃ H   ┃ T   ┃ G   │ Y   ┃ N   ┃ E   ┃ O   ┃ I   ┃ "   │         │
  ├─────────┺━━┯━━┻━━┯━━┻━━┯━━┻━━┯━━┹──┬──┴──┬──┺━━┯━━┻━━┯━━┻━━┯━━┻━━┯━━┹──┬──┴─────────┤
  │Shift       │ z @ │ x # │ m [ │ c ] │ v = │ k ╳╳│ l _ │ , ^ │ . & │ / % │ Shift      │
  │            │ Z   │ X   │ M   │ C   │ V   │ K ╳╳│ L   │ <   │ >   │ ?   │            │
  ├──────┬─────┼─────┼─────┼─────┴─────┴─────┴─────┴─────┼─────┼─────┼─────┼────────────┤
  │Ctrl  │Fn   │Win  │Alt  │                             │Alt  │Menu │Ctrl │            │
  │      │     │     │     │                             │gr   │     │     │            │ 
  └──────┴─────┴─────┴─────┴─────────────────────────────┴─────┴─────┴─────┴────────────┘


  -_=+`~
  !@#$%^&*
  () 
  []{}

  ┌────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬────────┐
  │ `  │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ ─   │ =   │ BS     │
  │ ~  │ !   │ @   │ #   │ $   │ %   │ ^   │ &   │ *   │ (   │ )   │ _   │ +   │        │
  ├────┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬─────┤
  │Tab    │     │  bs │   ↑ │ del │     │ ╳╳╳ │ ╳╳╳ │   @ │   # │ ; $ │ [ & │ ]   │ \   │
  │       │     │     │pgup │     │     │ ╳╳╳ │ ╳╳╳ │     │     │ :   │ {   │ }   │ |   │
  ├───────┴─┲━━━┷━┳━━━┷━┳━━━┷━┳━━━┷━┱───┴─┬───┴─┲━━━┷━┳━━━┷━┳━━━┷━┳━━━┷━┱───┴─┬───┴─────┤
  │Backspace┃home ┃   ← ┃   ↓ ┃   → ┃ end │   _ ┃   ! ┃   = ┃     ┃   ~ ┃ ' ` │Enter    │
  │         ┃     ┃     ┃pgdn ┃     ┃     │     ┃     ┃     ┃     ┃     ┃ "   │         │
  ├─────────┺━━┯━━┻━━┯━━┻━━┯━━┻━━┯━━┹──┬──┴──┬──┺━━┯━━┻━━┯━━┻━━┯━━┻━━┯━━┹──┬──┴─────────┤
  │Shift       │   { │   } │   ( │   ) │ ╳╳╳ │   - │   + │ , ^ │ . * │ / % │ Shift      │
  │            │     │     │     │     │ ╳╳╳ │     │     │ <   │ >   │ ?   │            │
  ├──────┬─────┼─────┼─────┼─────┴─────┴─────┴─────┴─────╔═════╗─────┼─────┼────────────┤
  │Ctrl  │Fn   │Win  │Alt  │                             ║Alt  ║Menu │Ctrl │            │
  │      │     │     │     │                             ║Gr   ║     │     │            │
  └──────┴─────┴─────┴─────┴─────────────────────────────╚═════╝─────┴─────┴────────────┘
* xkb
  
  X Keyboard Extension  
  Модуль Х11 обслуживающий клавиатуру
  
  https://wiki.archlinux.org/index.php/X_KeyBoard_extension

** Трансляция кода нажатой клавиши:
  
  В общем процесс выглядит так:
  (keycode, group, state) → keysym
   
  | keycode | сканкод клавиши          |
  | group   | текущий лайаут           |
  | state   | биты модификаторов       |
  |---------+--------------------------|
  | keysym  | транслированное значение |

** Этапы:
  
  1. (keycode [, group]) → type
  2. (state, type) → level
  3. (keycode, group, level) → S[keycode][group][level]
  
  Где S - таблица xkb_symbols
  
  type - используется для того, чтобы определить, какие модификаторы на какие
  клавиши влияют. В целом type необходим, чтобы сократить размер таблицы S.

** Экшены

   Кейсим может активировать экшн, например установка бита модификатора.
   (keysym, state) → action

** Назначение секций настоек
   
   | keycodes      | наименование сканкодов           |
   | types         | определяет влияние модификаторов |
   | compatibility | определяет экшены                |
   | symbols       | таблицы keysym                   |
   | geometry      | практически ни на что не влияет  |

** Compose key
   
   Модификатор позволяющий вводить юникод символы по названю

   compose c c c p → ☭
   http://cgit.freedesktop.org/xorg/lib/libX11/plain/nls/en_US.UTF-8/Compose.pre

** Назначение секций настоек
** xkbcomp
   Утилита трансялция конфигов [[xkb]] в бинарный формат
   
** setxkbmap
   
   вывод текущего конфига
   > setxkbmap -print

** xev
   выводит события клавиатуры

** xkbprint 
   генератор изображения клавиатуры
   > xkbprint -o keyboard.ps :0.0
   > gs keyboard.ps

* Docs
  - http://pascal.tsu.ru/other/xkb/setup.html
  - https://habrahabr.ru/post/222285/
  - https://www.x.org/wiki/XKB/
  - https://www.freedesktop.org/wiki/Software/XKeyboardConfig/
  - https://wiki.archlinux.org/index.php/Keyboard_configuration_in_Xorg

Название Симоволов можно подсмотреть здесь:
   /usr/include/X11/keysymdef.h

